Terminals unused in grammar

   L_SQUARE_BRACKET
   R_SQUARE_BRACKET


Grammar

    0 $accept: input $end

    1 input: program

    2 program: functions

    3 functions: %empty
    4          | function functions

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    6 declarations: %empty
    7             | declaration SEMICOLON declarations

    8 statements: statement SEMICOLON
    9           | statement SEMICOLON statements

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

   12 identifiers: IDENT
   13            | IDENT COMMA identifiers

   14 expression: multiplicative_expr
   15           | multiplicative_expr ADD multiplicative_expr
   16           | multiplicative_expr SUB multiplicative_expr

   17 statement: variable ASSIGN expression
   18          | IF bool_expr THEN statements ENDIF
   19          | IF bool_expr THEN statements ELSE statements ENDIF
   20          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   21          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   22          | READ variables
   23          | WRITE variables
   24          | CONTINUE
   25          | RETURN expression

   26 bool_expr: relation_and_expr
   27          | relation_and_expr OR relation_and_expr

   28 relation_and_expr: relation_expr
   29                  | relation_expr AND relation_expr

   30 relation_expr: NOT relation_expr
   31              | expression comparison expression
   32              | TRUE
   33              | FALSE
   34              | L_PAREN bool_expr R_PAREN

   35 comparison: EQ
   36           | NEQ
   37           | LTE
   38           | GTE
   39           | LT
   40           | GT

   41 multiplicative_expr: term
   42                    | term MULT term
   43                    | term DIV term
   44                    | term MOD term

   45 term: variable
   46     | SUB variable
   47     | NUMBER
   48     | SUB NUMBER
   49     | L_PAREN expression R_PAREN
   50     | SUB L_PAREN expression R_PAREN
   51     | IDENT L_PAREN expressions R_PAREN

   52 expressions: %empty
   53            | expression
   54            | expression COMMA expressions

   55 variables: variable
   56          | variable COMMA variables

   57 variable: IDENT
   58         | IDENT L_BRACKET expression R_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 11 47 48
IDENT (259) 5 12 13 51 57 58
FUNCTION (260) 5
SEMICOLON (261) 5 7 8 9
BEGIN_LOCALS (262) 5
BEGIN_PARAMS (263) 5
END_PARAMS (264) 5
END_LOCALS (265) 5
BEGIN_BODY (266) 5
END_BODY (267) 5
INTEGER (268) 10 11
ARRAY (269) 11
OF (270) 11
IF (271) 18 19
THEN (272) 18 19
ENDIF (273) 18 19
ELSE (274) 19
WHILE (275) 20 21
DO (276) 21
BEGINLOOP (277) 20 21
ENDLOOP (278) 20 21
CONTINUE (279) 24
READ (280) 22
WRITE (281) 23
L_BRACKET (282) 11 58
R_BRACKET (283) 11 58
TRUE (284) 32
FALSE (285) 33
RETURN (286) 25
COLON (287) 10 11
COMMA (288) 13 54 56
L_PAREN (289) 34 49 50 51
R_PAREN (290) 34 49 50 51
L_SQUARE_BRACKET (291)
R_SQUARE_BRACKET (292)
ASSIGN (293) 17
AND (294) 29
OR (295) 27
NOT (296) 30
SUB (297) 16 46 48 50
ADD (298) 15
MULT (299) 42
DIV (300) 43
MOD (301) 44
EQ (302) 35
NEQ (303) 36
LT (304) 39
GT (305) 40
LTE (306) 37
GTE (307) 38


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
input (54)
    on left: 1, on right: 0
program (55)
    on left: 2, on right: 1
functions (56)
    on left: 3 4, on right: 2 4
function (57)
    on left: 5, on right: 4
declarations (58)
    on left: 6 7, on right: 5 7
statements (59)
    on left: 8 9, on right: 5 9 18 19 20 21
declaration (60)
    on left: 10 11, on right: 7
identifiers (61)
    on left: 12 13, on right: 10 11 13
expression (62)
    on left: 14 15 16, on right: 17 25 31 49 50 53 54 58
statement (63)
    on left: 17 18 19 20 21 22 23 24 25, on right: 8 9
bool_expr (64)
    on left: 26 27, on right: 18 19 20 21 34
relation_and_expr (65)
    on left: 28 29, on right: 26 27
relation_expr (66)
    on left: 30 31 32 33 34, on right: 28 29 30
comparison (67)
    on left: 35 36 37 38 39 40, on right: 31
multiplicative_expr (68)
    on left: 41 42 43 44, on right: 14 15 16
term (69)
    on left: 45 46 47 48 49 50 51, on right: 41 42 43 44
expressions (70)
    on left: 52 53 54, on right: 51 54
variables (71)
    on left: 55 56, on right: 22 23 56
variable (72)
    on left: 57 58, on right: 17 45 46 55 56


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    input      go to state 2
    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    5 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    0 $accept: input . $end

    $end  shift, and go to state 7


State 3

    1 input: program .

    $default  reduce using rule 1 (input)


State 4

    2 program: functions .

    $default  reduce using rule 2 (program)


State 5

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 5


State 6

    5 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: input $end .

    $default  accept


State 8

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 9

    5 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14


State 11

   12 identifiers: IDENT .
   13            | IDENT . COMMA identifiers

    COMMA  shift, and go to state 15

    $default  reduce using rule 12 (identifiers)


State 12

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 14

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 15

   13 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 11

    identifiers  go to state 19


State 16

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 13
    identifiers   go to state 14


State 18

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 19

   13 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 13 (identifiers)


State 20

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 24
    declaration   go to state 13
    identifiers   go to state 14


State 21

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 22

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 23

   11 declaration: identifiers COLON ARRAY . L_BRACKET NUMBER R_BRACKET OF INTEGER

    L_BRACKET  shift, and go to state 25


State 24

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

   11 declaration: identifiers COLON ARRAY L_BRACKET . NUMBER R_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

   11 declaration: identifiers COLON ARRAY L_BRACKET NUMBER . R_BRACKET OF INTEGER

    R_BRACKET  shift, and go to state 29


State 28

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 38
    statement   go to state 39
    variable    go to state 40


State 29

   11 declaration: identifiers COLON ARRAY L_BRACKET NUMBER R_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 30

   57 variable: IDENT .
   58         | IDENT . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 42

    $default  reduce using rule 57 (variable)


State 31

   18 statement: IF . bool_expr THEN statements ENDIF
   19          | IF . bool_expr THEN statements ELSE statements ENDIF

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    SUB      shift, and go to state 49

    expression           go to state 50
    bool_expr            go to state 51
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 32

   20 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    SUB      shift, and go to state 49

    expression           go to state 50
    bool_expr            go to state 57
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 33

   21 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 58


State 34

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 35

   22 statement: READ . variables

    IDENT  shift, and go to state 30

    variables  go to state 59
    variable   go to state 60


State 36

   23 statement: WRITE . variables

    IDENT  shift, and go to state 30

    variables  go to state 61
    variable   go to state 60


State 37

   25 statement: RETURN . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    expression           go to state 63
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 38

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 64


State 39

    8 statements: statement . SEMICOLON
    9           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 65


State 40

   17 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 66


State 41

   11 declaration: identifiers COLON ARRAY L_BRACKET NUMBER R_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 67


State 42

   58 variable: IDENT L_BRACKET . expression R_BRACKET

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    expression           go to state 68
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 43

   47 term: NUMBER .

    $default  reduce using rule 47 (term)


State 44

   51 term: IDENT . L_PAREN expressions R_PAREN
   57 variable: IDENT .
   58         | IDENT . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 42
    L_PAREN    shift, and go to state 69

    $default  reduce using rule 57 (variable)


State 45

   32 relation_expr: TRUE .

    $default  reduce using rule 32 (relation_expr)


State 46

   33 relation_expr: FALSE .

    $default  reduce using rule 33 (relation_expr)


State 47

   34 relation_expr: L_PAREN . bool_expr R_PAREN
   49 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    SUB      shift, and go to state 49

    expression           go to state 70
    bool_expr            go to state 71
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 48

   30 relation_expr: NOT . relation_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    SUB      shift, and go to state 49

    expression           go to state 50
    relation_expr        go to state 72
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 49

   46 term: SUB . variable
   48     | SUB . NUMBER
   50     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 73
    IDENT    shift, and go to state 30
    L_PAREN  shift, and go to state 74

    variable  go to state 75


State 50

   31 relation_expr: expression . comparison expression

    EQ   shift, and go to state 76
    NEQ  shift, and go to state 77
    LT   shift, and go to state 78
    GT   shift, and go to state 79
    LTE  shift, and go to state 80
    GTE  shift, and go to state 81

    comparison  go to state 82


State 51

   18 statement: IF bool_expr . THEN statements ENDIF
   19          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 83


State 52

   26 bool_expr: relation_and_expr .
   27          | relation_and_expr . OR relation_and_expr

    OR  shift, and go to state 84

    $default  reduce using rule 26 (bool_expr)


State 53

   28 relation_and_expr: relation_expr .
   29                  | relation_expr . AND relation_expr

    AND  shift, and go to state 85

    $default  reduce using rule 28 (relation_and_expr)


State 54

   14 expression: multiplicative_expr .
   15           | multiplicative_expr . ADD multiplicative_expr
   16           | multiplicative_expr . SUB multiplicative_expr

    SUB  shift, and go to state 86
    ADD  shift, and go to state 87

    $default  reduce using rule 14 (expression)


State 55

   41 multiplicative_expr: term .
   42                    | term . MULT term
   43                    | term . DIV term
   44                    | term . MOD term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 41 (multiplicative_expr)


State 56

   45 term: variable .

    $default  reduce using rule 45 (term)


State 57

   20 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 91


State 58

   21 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 92
    statement   go to state 39
    variable    go to state 40


State 59

   22 statement: READ variables .

    $default  reduce using rule 22 (statement)


State 60

   55 variables: variable .
   56          | variable . COMMA variables

    COMMA  shift, and go to state 93

    $default  reduce using rule 55 (variables)


State 61

   23 statement: WRITE variables .

    $default  reduce using rule 23 (statement)


State 62

   49 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    expression           go to state 94
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 63

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 64

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 65

    8 statements: statement SEMICOLON .
    9           | statement SEMICOLON . statements

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    statements  go to state 95
    statement   go to state 39
    variable    go to state 40


State 66

   17 statement: variable ASSIGN . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    expression           go to state 96
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 67

   11 declaration: identifiers COLON ARRAY L_BRACKET NUMBER R_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 68

   58 variable: IDENT L_BRACKET expression . R_BRACKET

    R_BRACKET  shift, and go to state 97


State 69

   51 term: IDENT L_PAREN . expressions R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    $default  reduce using rule 52 (expressions)

    expression           go to state 98
    multiplicative_expr  go to state 54
    term                 go to state 55
    expressions          go to state 99
    variable             go to state 56


State 70

   31 relation_expr: expression . comparison expression
   49 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 100
    EQ       shift, and go to state 76
    NEQ      shift, and go to state 77
    LT       shift, and go to state 78
    GT       shift, and go to state 79
    LTE      shift, and go to state 80
    GTE      shift, and go to state 81

    comparison  go to state 82


State 71

   34 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 101


State 72

   30 relation_expr: NOT relation_expr .

    $default  reduce using rule 30 (relation_expr)


State 73

   48 term: SUB NUMBER .

    $default  reduce using rule 48 (term)


State 74

   50 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    expression           go to state 102
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 75

   46 term: SUB variable .

    $default  reduce using rule 46 (term)


State 76

   35 comparison: EQ .

    $default  reduce using rule 35 (comparison)


State 77

   36 comparison: NEQ .

    $default  reduce using rule 36 (comparison)


State 78

   39 comparison: LT .

    $default  reduce using rule 39 (comparison)


State 79

   40 comparison: GT .

    $default  reduce using rule 40 (comparison)


State 80

   37 comparison: LTE .

    $default  reduce using rule 37 (comparison)


State 81

   38 comparison: GTE .

    $default  reduce using rule 38 (comparison)


State 82

   31 relation_expr: expression comparison . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    expression           go to state 103
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 83

   18 statement: IF bool_expr THEN . statements ENDIF
   19          | IF bool_expr THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 104
    statement   go to state 39
    variable    go to state 40


State 84

   27 bool_expr: relation_and_expr OR . relation_and_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    SUB      shift, and go to state 49

    expression           go to state 50
    relation_and_expr    go to state 105
    relation_expr        go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 85

   29 relation_and_expr: relation_expr AND . relation_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    SUB      shift, and go to state 49

    expression           go to state 50
    relation_expr        go to state 106
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 86

   16 expression: multiplicative_expr SUB . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    multiplicative_expr  go to state 107
    term                 go to state 55
    variable             go to state 56


State 87

   15 expression: multiplicative_expr ADD . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    multiplicative_expr  go to state 108
    term                 go to state 55
    variable             go to state 56


State 88

   42 multiplicative_expr: term MULT . term

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    term      go to state 109
    variable  go to state 56


State 89

   43 multiplicative_expr: term DIV . term

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    term      go to state 110
    variable  go to state 56


State 90

   44 multiplicative_expr: term MOD . term

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    term      go to state 111
    variable  go to state 56


State 91

   20 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 112
    statement   go to state 39
    variable    go to state 40


State 92

   21 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 113


State 93

   56 variables: variable COMMA . variables

    IDENT  shift, and go to state 30

    variables  go to state 114
    variable   go to state 60


State 94

   49 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 100


State 95

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


State 96

   17 statement: variable ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 97

   58 variable: IDENT L_BRACKET expression R_BRACKET .

    $default  reduce using rule 58 (variable)


State 98

   53 expressions: expression .
   54            | expression . COMMA expressions

    COMMA  shift, and go to state 115

    $default  reduce using rule 53 (expressions)


State 99

   51 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 116


State 100

   49 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 49 (term)


State 101

   34 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 34 (relation_expr)


State 102

   50 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 117


State 103

   31 relation_expr: expression comparison expression .

    $default  reduce using rule 31 (relation_expr)


State 104

   18 statement: IF bool_expr THEN statements . ENDIF
   19          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 118
    ELSE   shift, and go to state 119


State 105

   27 bool_expr: relation_and_expr OR relation_and_expr .

    $default  reduce using rule 27 (bool_expr)


State 106

   29 relation_and_expr: relation_expr AND relation_expr .

    $default  reduce using rule 29 (relation_and_expr)


State 107

   16 expression: multiplicative_expr SUB multiplicative_expr .

    $default  reduce using rule 16 (expression)


State 108

   15 expression: multiplicative_expr ADD multiplicative_expr .

    $default  reduce using rule 15 (expression)


State 109

   42 multiplicative_expr: term MULT term .

    $default  reduce using rule 42 (multiplicative_expr)


State 110

   43 multiplicative_expr: term DIV term .

    $default  reduce using rule 43 (multiplicative_expr)


State 111

   44 multiplicative_expr: term MOD term .

    $default  reduce using rule 44 (multiplicative_expr)


State 112

   20 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 120


State 113

   21 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 121


State 114

   56 variables: variable COMMA variables .

    $default  reduce using rule 56 (variables)


State 115

   54 expressions: expression COMMA . expressions

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 49

    $default  reduce using rule 52 (expressions)

    expression           go to state 98
    multiplicative_expr  go to state 54
    term                 go to state 55
    expressions          go to state 122
    variable             go to state 56


State 116

   51 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 51 (term)


State 117

   50 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 50 (term)


State 118

   18 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 18 (statement)


State 119

   19 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statements  go to state 123
    statement   go to state 39
    variable    go to state 40


State 120

   20 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)


State 121

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NOT      shift, and go to state 48
    SUB      shift, and go to state 49

    expression           go to state 50
    bool_expr            go to state 124
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    variable             go to state 56


State 122

   54 expressions: expression COMMA expressions .

    $default  reduce using rule 54 (expressions)


State 123

   19 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 125


State 124

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 21 (statement)


State 125

   19 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 19 (statement)
